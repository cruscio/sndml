<doc name="quickstart" title="Quick Start">

<h2>Overview</h2>
<p>This Quick Start Guide contains instructions for 
installing and testing the ServiceNow DataPump.</p>

<h2>JAR Files</h2>
<p>Five JAR files are required for execution.
The file <b>sn-datapump-@version@.jar</b> contains Java source code and class files
for this application.
The file <b>odbc6.jar</b> is not included in this distribution because of its size.
It can be downloaded from 
<link url="http://www.oracle.com/technetwork/index.html">Oracle Technology Network</link>.
If you are using MySQL instead of Oracle then you would substitute
a recent version of 
<link url="http://dev.mysql.com/downloads/connector/j/">Connector/J</link>.
</p>
All five of these files must be included in the CLASSPATH.
<p/>
<table>
  <tr>
    <th>File</th>
    <th>Description</th>
    <th>Available from</th>
    <th><small>Included in Zip?</small></th>
  </tr>
  <tr>
    <td><filename>sn-datapump-@version@.jar</filename></td>
    <td>Source code and class files for this application</td>
    <td></td>
    <td>Yes</td>
  </tr>
  <tr>
    <td><filename>jdom-2.0.0.jar</filename></td>
    <td>JDOM 2.x is used to build and parse XML documents</td>
    <td><link>http://www.jdom.org</link></td>
    <td>Yes</td>
  </tr>
  <tr>
    <td><filename>log4j-1.2.16.jar</filename></td>
    <td>Log4j is used for logging and debugging</td>
    <td><link>http://logging.apache.org/log4j/1.2/</link></td>
    <td>Yes</td>
  </tr>
  <tr>
    <td><filename>commons-lang3-3.1.jar</filename></td>
    <td>String and array utility functions</td>
    <td><link>http://commons.apache.org/lang/</link></td>
    <td>Yes</td>
  </tr>
  <tr>
    <td><filename>ojdbc6.jar</filename></td>
    <td><join>Oracle JDBC driver is required for Oracle.  
      If you are using MySQL you should substitute the MySQL Connector JAR.</join></td>
    <td><link url="http://www.oracle.com/technetwork/index.html">http://www.oracle.com/</link></td>
    <td>No</td>
  </tr>
</table>

<h2>Configuration files</h2>
<h3>datapump.properties</h3>
<p>This file must be in a CLASSPATH directory or specified on the command line using the
<code>-p</code> <var>filename</var> option.</p>
<p>This configuration file must be modified.  
It contains the URLs, user names and passwords for the ServiceNow instance 
and the Oracle database.</p>

<h3>sqltemplates.xml</h3>
<p>This file must be in a CLASSPATH directory.
It contains information necessary to generate SQL statements.</p>
<p>This file should not require modification unless the data types are wrong or 
the field name mappings need to be modified.
For additional information refer to 
the <page name="configuration" sect="sqltemplates">Configuration Guide</page>.</p>

<h3>log4j.properties</h3>
<p>This file must be in a CLASSPATH directory.  
It contains logging configuration.
For additional information refer to 
the <page name="configuration" sect="log4j">Configuration Guide</page>.</p>

<h2>Initial Setup</h2>
<h3>1) Install and Configure Oracle</h3>
<p>This QuickStart guide assumes that you are using Oracle.
For testing I recommend 
<link url="http://www.oracle.com/technetwork/products/express-edition/">Oracle Express Edition which can be downloaded</link> 
and installed for free.
I also recommend 
<link url="http://www.oracle.com/technetwork/developer-tools/sql-developer/">Oracle SQL Developer</link>
as a great tool for testing JDBC connectivity and submitting ad-hoc SQL.
</p>
<p>You will require an Oracle account with <code>CREATE TABLE</code> role.
Verify that your user has create table capability by typing in these two commands:</p>
<pre>
SQL> create table foo (bar varchar2(10), primary key(bar));

Table created.

SQL> drop table foo;

Table dropped.
</pre>
<h3>2) Download ojdbc6.jar from Oracle</h3>
<p>The Oracle JDBC JAR is required for operation but is not included
in this ZIP file for space reasons.
Download the file from 
<link url="http://www.oracle.com/technetwork/">Oracle.com</link>. 
</p>
<h3>3) Configure ServiceNow Web Services access</h3>
<p>Web Services access should be enabled unless it has been disabled 
by a ServiceNow administrator.  However, you will need to create a role
and a user for the application.</p>
<ol>
<li><join>Create a role named "datapump".  The role must contain the following roles:</join><br/>
<ul>
<li>soap_query</li>
</ul>
</li>
<li>Grant the <name>datapump</name> role read access to the following tables:
<ul>
<li>sys_db_object</li>
<li>sys_dictionary</li></ul>
<li><join>Ensure that the <name>datapump</name> role has read access to any tables you intend to replicate.
Be sure to check for field level Access Controls which could interfere with operation.</join></li>
</li>
<li><join>Create a ServiceNow user named "soap.datapump" with password "tiger".
(You can choose any password.  The password is specified in 
<page name="configuration" sect="properties">datapump.properties</page>.) 
</join></li>
</ol>
<h3>5) Modify datapump.properties</h3>
<p>The following six properties must be set:</p>
<ul>
<li>pumper.servicenow.url</li>
<li>pumper.servicenow.username</li>
<li>pumper.servicenow.password</li>
<li>pumper.database.url</li>
<li>pumper.database.username</li>
<li>pumper.database.password</li>
</ul>

<h3>6) Set the CLASSPATH</h3>
<p>The CLASSPATH  must include the five JAR files listed above, 
plus the directory where the three configuration files are located.</p>
<p><code>set classpath=.;sn-datapump-@version@.jar;log4j-1.2.16.jar;lib/jdom-2.0.0.jar;commons-lang3-3.1.jar;ojdbc6.jar</code></p>

<h3>7) Create a simple script</h3>
<p>Create a file named <code>incident_demo.txt</code> with a single line as follows:</p>
<example>
load incident from 2013-03-01
</example>
<p>Set the date sufficiently far back to collect a reasonable sample of incident data size
based on your transaction volume.  You need to collect some incidents,
but if you set the date too far back then the
SOAP query will return too large a result set and may appear to hang.
Or alternately, select a small table such as the <b>Location</b> table:</p>
<example>
load cmn_location
</example>

<h3>8) Execute the script</h3>
<p>Specify the main class, which is 
<code>servicenow.community.datapump.Pumper</code>, 
followed by <code>-f</code> and the name of the script file.
</p>
<pre>java servicenow.community.datapump.Pumper -f incident_demo.txt</pre>
<p>
If you succeed in creating a table and loading it with data, then you have installed
and configured the DataPump correctly.
</p>
</doc>
